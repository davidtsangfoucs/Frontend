{"ast":null,"code":"var _jsxFileName = \"/Users/david/Documents/GitHub/web-api/client/src/component/MessageList.js\",\n  _s = $RefreshSig$();\nimport axios from '../commons/axios';\nimport React, { useState, useEffect } from 'react';\nimport { baseURL } from '../commons/helper';\nimport UseAuth from '../component/UseAuth';\nimport MsgPanel from '../component/MsgPanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageList = () => {\n  _s();\n  const [messageGroups, setMessageGroups] = useState([]);\n  const [selectedMessage, setSelectedMessage] = useState(null);\n  const [showPanel, setShowPanel] = useState(false);\n  const [isDeleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\n  const [selectedMessageId, setSelectedMessageId] = useState(null);\n  const [websocket, setWebsocket] = useState(null); // New state variable for WebSocket\n\n  const {\n    isLoggedIn,\n    premission,\n    userId,\n    objId,\n    location,\n    userName,\n    userEmail\n  } = UseAuth();\n  useEffect(() => {\n    if (location) {\n      fetchMessages();\n    }\n    // Establish WebSocket connection when component mounts\n    const ws = new WebSocket('<websocket_url>');\n    ws.onmessage = handleWebSocketMessage;\n    setWebsocket(ws);\n    return () => {\n      // Close WebSocket connection when component unmounts\n      if (websocket) {\n        websocket.close();\n      }\n    };\n  }, [location]);\n  useEffect(() => {\n    // Fetch messages again when WebSocket receives a new message\n    if (websocket) {\n      websocket.onmessage = handleWebSocketMessage;\n    }\n  }, [websocket]);\n  const handleWebSocketMessage = event => {\n    const message = JSON.parse(event.data);\n    if (message.type === 'newMessage') {\n      // Update messages when a new message is received via WebSocket\n      fetchMessages();\n    }\n  };\n  const fetchMessages = async () => {\n    try {\n      const response = await axios.get(`${baseURL}/get-messages`);\n      const messages = response.data.data;\n      let filteredMessages;\n      if (premission === 'Charity Worker') {\n        filteredMessages = messages.filter(message => message.receiver === location || message.sender === location);\n      } else {\n        filteredMessages = messages.filter(message => message.receiver === userEmail);\n      }\n      const groupedMessages = [];\n      filteredMessages.forEach(message => {\n        const groupIndex = groupedMessages.findIndex(group => group.sender === message.sender && group.receiver === message.receiver || group.sender === message.receiver && group.receiver === message.sender);\n        if (groupIndex > -1) {\n          // Append content and time to existing group\n          groupedMessages[groupIndex].content.push(message.sender + ': ' + message.content);\n          groupedMessages[groupIndex].createdAt.push(message.createdAt);\n          groupedMessages[groupIndex].updatedAt.push(message.updatedAt);\n          groupedMessages[groupIndex]._id.push(message._id);\n        } else {\n          // Create new group\n          groupedMessages.push({\n            sender: message.sender,\n            receiver: message.receiver,\n            content: [message.sender + ': ' + message.content],\n            createdAt: [message.createdAt],\n            updatedAt: [message.updatedAt],\n            _id: [message._id]\n          });\n        }\n      });\n\n      // Sort messages within each group by time in ascending order\n      groupedMessages.forEach(group => {\n        const messages = group.content.map((content, index) => ({\n          content,\n          createdAt: group.createdAt[index],\n          updatedAt: group.updatedAt[index],\n          _id: group._id[index]\n        }));\n        messages.sort((a, b) => new Date(a.createdAt) - new Date(b.createdAt));\n        group.content = messages.map(message => message.content);\n        group.createdAt = messages.map(message => message.createdAt);\n        group.updatedAt = messages.map(message => message.updatedAt);\n        group._id = messages.map(message => message._id);\n      });\n      setMessageGroups(groupedMessages);\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n  const handleDelete = id => {\n    setDeleteConfirmationOpen(true);\n    setSelectedMessageId(id);\n  };\n  const handleDeleteOneData = id => {\n    confirmDeleteOneMsgAction(id);\n  };\n  const confirmDeleteOneMsgAction = async id => {\n    try {\n      await axios.delete(`/delete-one-messages/${id}`);\n      fetchMessages();\n    } catch (error) {\n      console.error('Error deleting message:', error);\n    } finally {\n      setDeleteConfirmationOpen(false);\n      setSelectedMessageId(null);\n    }\n  };\n  const confirmDeleteAction = async id => {\n    try {\n      await axios.delete(`/delete-messages/${id}`);\n      fetchMessages();\n    } catch (error) {\n      console.error('Error deleting message:', error);\n    } finally {\n      setDeleteConfirmationOpen(false);\n      setSelectedMessageId(null);\n    }\n  };\n  const handleReply = message => {\n    setSelectedMessage(message);\n    setShowPanel(!showPanel);\n  };\n  const handleCloseReply = () => {\n    setSelectedMessage(null);\n  };\n  const cancelDeleteAction = () => {\n    setDeleteConfirmationOpen(false);\n    setSelectedMessageId(null);\n  };\n  const formatDateTime = dateTimeString => {\n    const options = {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n      hour: 'numeric',\n      minute: 'numeric',\n      hour12: true,\n      timeZone: 'Asia/Hong_Kong'\n    };\n    const dateTime = new Date(dateTimeString);\n    return dateTime.toLocaleString('en-US', options);\n  };\n  const closeMessagePanel = () => {\n    setShowPanel(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table is-bordered is-fullwidth\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Sender\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Receiver\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), premission === 'Charity Worker' && /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Delete Msg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 49\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: messageGroups.map(group => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: group.sender\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: premission === 'Public User' ? userEmail : group.receiver\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: group.content.map((content, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: content\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: group.createdAt.map((createdAt, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: formatDateTime(createdAt)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this), premission === 'Charity Worker' && /*#__PURE__*/_jsxDEV(\"td\", {\n            children: group.content.map((content, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button small-delete is-danger\",\n                onClick: () => handleDeleteOneData(group._id[index]),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 23\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button is-primary\",\n              onClick: () => handleReply(group),\n              children: \"Reply\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this), premission === 'Charity Worker' && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button is-danger\",\n              onClick: () => handleDelete(group._id[0]),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 19\n            }, this), isDeleteConfirmationOpen && selectedMessageId === group._id[0] && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal is-active\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"modal-background\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"delete-box modal-content\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"box has-text-centered\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                    className: \"confirm-delete-msg\",\n                    children: \"Confirm Deletion\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Are you sure you want to delete this Msg?\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"buttons\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"button is-danger\",\n                      onClick: () => confirmDeleteAction(group._id[0]),\n                      children: \"Yes\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 240,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"button\",\n                      onClick: cancelDeleteAction,\n                      children: \"No\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 246,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"modal-close is-large\",\n                \"aria-label\": \"close\",\n                onClick: cancelDeleteAction\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this)]\n        }, `${group.sender}-${group.receiver}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), showPanel && /*#__PURE__*/_jsxDEV(MsgPanel, {\n      closePanel: closeMessagePanel,\n      replyReceiver: selectedMessage.sender,\n      replySender: selectedMessage.receiver,\n      publicUserName: premission === 'Public User' ? userName : selectedMessage.receiver,\n      onClose: handleCloseReply\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageList, \"+f7m5aFPHkI6hGdHzwr/X0IanW4=\");\n_c = MessageList;\nexport default MessageList;\nvar _c;\n$RefreshReg$(_c, \"MessageList\");","map":{"version":3,"names":["axios","React","useState","useEffect","baseURL","UseAuth","MsgPanel","jsxDEV","_jsxDEV","MessageList","_s","messageGroups","setMessageGroups","selectedMessage","setSelectedMessage","showPanel","setShowPanel","isDeleteConfirmationOpen","setDeleteConfirmationOpen","selectedMessageId","setSelectedMessageId","websocket","setWebsocket","isLoggedIn","premission","userId","objId","location","userName","userEmail","fetchMessages","ws","WebSocket","onmessage","handleWebSocketMessage","close","event","message","JSON","parse","data","type","response","get","messages","filteredMessages","filter","receiver","sender","groupedMessages","forEach","groupIndex","findIndex","group","content","push","createdAt","updatedAt","_id","map","index","sort","a","b","Date","error","console","handleDelete","id","handleDeleteOneData","confirmDeleteOneMsgAction","delete","confirmDeleteAction","handleReply","handleCloseReply","cancelDeleteAction","formatDateTime","dateTimeString","options","year","month","day","hour","minute","hour12","timeZone","dateTime","toLocaleString","closeMessagePanel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","closePanel","replyReceiver","replySender","publicUserName","onClose","_c","$RefreshReg$"],"sources":["/Users/david/Documents/GitHub/web-api/client/src/component/MessageList.js"],"sourcesContent":["import axios from '../commons/axios';\nimport React, { useState, useEffect } from 'react';\nimport { baseURL } from '../commons/helper';\nimport UseAuth from '../component/UseAuth';\nimport MsgPanel from '../component/MsgPanel';\n\nconst MessageList = () => {\n  const [messageGroups, setMessageGroups] = useState([]);\n  const [selectedMessage, setSelectedMessage] = useState(null);\n  const [showPanel, setShowPanel] = useState(false);\n  const [isDeleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\n  const [selectedMessageId, setSelectedMessageId] = useState(null);\n  const [websocket, setWebsocket] = useState(null); // New state variable for WebSocket\n\n  const { isLoggedIn, premission, userId, objId, location, userName, userEmail } = UseAuth();\n\n  useEffect(() => {\n    if (location) {\n      fetchMessages();\n    }\n    // Establish WebSocket connection when component mounts\n    const ws = new WebSocket('<websocket_url>');\n    ws.onmessage = handleWebSocketMessage;\n    setWebsocket(ws);\n    return () => {\n      // Close WebSocket connection when component unmounts\n      if (websocket) {\n        websocket.close();\n      }\n    };\n  }, [location]);\n\n  useEffect(() => {\n    // Fetch messages again when WebSocket receives a new message\n    if (websocket) {\n      websocket.onmessage = handleWebSocketMessage;\n    }\n  }, [websocket]);\n\n  const handleWebSocketMessage = (event) => {\n    const message = JSON.parse(event.data);\n    if (message.type === 'newMessage') {\n      // Update messages when a new message is received via WebSocket\n      fetchMessages();\n    }\n  };\n\n  const fetchMessages = async () => {\n    try {\n      const response = await axios.get(`${baseURL}/get-messages`);\n      const messages = response.data.data;\n\n      let filteredMessages;\n      if (premission === 'Charity Worker') {\n        filteredMessages = messages.filter(\n          (message) => message.receiver === location || message.sender === location\n        );\n      } else {\n        filteredMessages = messages.filter((message) => message.receiver === userEmail);\n      }\n\n      const groupedMessages = [];\n      filteredMessages.forEach((message) => {\n        const groupIndex = groupedMessages.findIndex(\n          (group) =>\n            (group.sender === message.sender && group.receiver === message.receiver) ||\n            (group.sender === message.receiver && group.receiver === message.sender)\n        );\n\n        if (groupIndex > -1) {\n          // Append content and time to existing group\n          groupedMessages[groupIndex].content.push(message.sender + ': ' + message.content);\n          groupedMessages[groupIndex].createdAt.push(message.createdAt);\n          groupedMessages[groupIndex].updatedAt.push(message.updatedAt);\n          groupedMessages[groupIndex]._id.push(message._id);\n        } else {\n          // Create new group\n          groupedMessages.push({\n            sender: message.sender,\n            receiver: message.receiver,\n            content: [message.sender + ': ' + message.content],\n            createdAt: [message.createdAt],\n            updatedAt: [message.updatedAt],\n            _id: [message._id],\n          });\n        }\n      });\n\n      // Sort messages within each group by time in ascending order\n      groupedMessages.forEach((group) => {\n        const messages = group.content.map((content, index) => ({\n          content,\n          createdAt: group.createdAt[index],\n          updatedAt: group.updatedAt[index],\n          _id: group._id[index],\n        }));\n\n        messages.sort((a, b) => new Date(a.createdAt) - new Date(b.createdAt));\n\n        group.content = messages.map((message) => message.content);\n        group.createdAt = messages.map((message) => message.createdAt);\n        group.updatedAt = messages.map((message) => message.updatedAt);\n        group._id = messages.map((message) => message._id);\n      });\n\n      setMessageGroups(groupedMessages);\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n\n  const handleDelete = (id) => {\n    setDeleteConfirmationOpen(true);\n    setSelectedMessageId(id);\n  };\n\n  const handleDeleteOneData = (id) => {\n    confirmDeleteOneMsgAction(id);\n  };\n\n  const confirmDeleteOneMsgAction = async (id) => {\n    try {\n      await axios.delete(`/delete-one-messages/${id}`);\n      fetchMessages();\n    } catch (error) {\n      console.error('Error deleting message:', error);\n    } finally {\n      setDeleteConfirmationOpen(false);\n      setSelectedMessageId(null);\n    }\n  };\n\n  const confirmDeleteAction = async (id) => {\n    try {\n      await axios.delete(`/delete-messages/${id}`);\n      fetchMessages();\n    } catch (error) {\n      console.error('Error deleting message:', error);\n    } finally {\n      setDeleteConfirmationOpen(false);\n      setSelectedMessageId(null);\n    }\n  };\n\n  const handleReply = (message) => {\n    setSelectedMessage(message);\n    setShowPanel(!showPanel);\n  };\n\n  const handleCloseReply = () => {\n    setSelectedMessage(null);\n  };\n\n  const cancelDeleteAction = () => {\n    setDeleteConfirmationOpen(false);\n    setSelectedMessageId(null);\n  };\n\n  const formatDateTime = (dateTimeString) => {\n    const options = {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n      hour: 'numeric',\n      minute: 'numeric',\n      hour12: true,\n      timeZone: 'Asia/Hong_Kong',\n    };\n\n    const dateTime = new Date(dateTimeString);\n    return dateTime.toLocaleString('en-US', options);\n  };\n\n  const closeMessagePanel = () => {\n    setShowPanel(false);\n  };\n\n  return (\n    <div className=\"container\">\n      <table className=\"table is-bordered is-fullwidth\">\n        <thead>\n          <tr>\n            <th>Sender</th>\n            <th>Receiver</th>\n            <th>Content</th>\n            <th>Time</th>\n            {premission === 'Charity Worker' && <th>Delete Msg</th>}\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {messageGroups.map((group) => (\n            <tr key={`${group.sender}-${group.receiver}`}>\n              <td>{group.sender}</td>\n              <td>{premission === 'Public User' ? userEmail : group.receiver}</td>\n              <td>\n                {group.content.map((content, index) => (\n                  <div key={index}>{content}</div>\n                ))}\n              </td>\n              <td>\n                {group.createdAt.map((createdAt, index) => (\n                  <div key={index}>{formatDateTime(createdAt)}</div>\n                ))}\n              </td>\n              {premission === 'Charity Worker' && (\n                <td>\n                  {group.content.map((content, index) => (\n                    <div key={index}>\n                      <button\n                        className=\"button small-delete is-danger\"\n                        onClick={() => handleDeleteOneData(group._id[index])}\n                      >\n                        Delete\n                      </button>\n                    </div>\n                  ))}\n                </td>\n              )}\n              <td>\n                <button className=\"button is-primary\" onClick={() => handleReply(group)}>\n                  Reply\n                </button>\n                {premission === 'Charity Worker' && (\n                  <button\n                    className=\"button is-danger\"\n                    onClick={() => handleDelete(group._id[0])}\n                  >\n                    Delete\n                  </button>\n                )}\n                {isDeleteConfirmationOpen && selectedMessageId === group._id[0] && (\n                  <div className=\"modal is-active\">\n                    <div className=\"modal-background\"></div>\n                    <div className=\"delete-box modal-content\">\n                      <div className=\"box has-text-centered\">\n                        <h2 className=\"confirm-delete-msg\">Confirm Deletion</h2>\n                        <p>Are you sure you want to delete this Msg?</p>\n                        <div className=\"buttons\">\n                          <button\n                            className=\"button is-danger\"\n                            onClick={() => confirmDeleteAction(group._id[0])}\n                          >\n                            Yes\n                          </button>\n                          <button className=\"button\" onClick={cancelDeleteAction}>\n                            No\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                    <button\n                      className=\"modal-close is-large\"\n                      aria-label=\"close\"\n                      onClick={cancelDeleteAction}\n                    ></button>\n                  </div>\n                )}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      {showPanel && (\n        <MsgPanel\n          closePanel={closeMessagePanel}\n          replyReceiver={selectedMessage.sender}\n          replySender={selectedMessage.receiver}\n          publicUserName={premission === 'Public User' ? userName : selectedMessage.receiver}\n          onClose={handleCloseReply}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default MessageList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}