{"ast":null,"code":"var _jsxFileName = \"/Users/david/Documents/GitHub/web-api/client/src/component/LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from '../commons/axios';\nimport { baseURL } from '../commons/helper';\nimport { useHistory, useNavigate } from 'react-router-dom';\nimport FacebookLogin from 'react-facebook-login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  // \n  const [name, setName] = useState('');\n  const [birthday, setBirthday] = useState('');\n  const [fbCount, setFbCount] = useState(0);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [userInfo, setUserInfo] = useState(null);\n  const responseFacebook = async response => {\n    const RegisFormData = {};\n    axios.get(`https://graph.facebook.com/me?fields=name,email,picture,gender,birthday,location&access_token=${response.accessToken}`).then(res => {\n      console.log('res', res);\n      alert({\n        res\n      });\n      // setName(res.data.name);\n      // setBirthday(res.data.birthday);\n      // setFbCount(res.data.friends.summary.total_count);\n      // setLoggedIn(true);\n      // setUserInfo(res.data);\n\n      // localStorage.setItem('userData', JSON.stringify(res.data));\n      localStorage.setItem('auth-token', true);\n      localStorage.setItem('premission', \"Public User\");\n      // need using facebook data to register the acc ? \n      setPremission(\"Public User\");\n      setDepartment(\"No Department\");\n      let emId = 'A000';\n      // Extract the numerical portion of the application ID\n      const currentCount = parseInt(emId.slice(1)); // Parse the numeric part of the ID\n\n      // Increment the count\n      const newCount = currentCount + 1;\n\n      // Pad the count with leading zeros to maintain the desired format\n      const paddedCount = String(newCount).padStart(4, '0');\n\n      // Generate the new application ID\n      const newId = `A${paddedCount}`;\n      RegisFormData = {\n        fullName: res.data.name,\n        email: res.data.email,\n        password: 'No password number',\n        confirmPassword: 'No password number',\n        dateOfBirth: res.data.birthday,\n        gender: res.data.gender,\n        phoneNumber: 'No phone number',\n        address: 'No address number',\n        state: \"verification\",\n        premission: \"Public User\",\n        department: \"No Department\",\n        employeeID: newId,\n        hkID: 'No phone number'\n      };\n\n      // Perform further registration validation and submission\n\n      // call API to create employee\n\n      // Simulating an API call delay with setTimeout\n\n      // yes\n\n      // navigate('/');\n    }).then(async res => {\n      // ...\n      await registerUser(RegisFormData);\n      // ...\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n  const registerUser = async RegisFormData => {\n    try {\n      const response = await axios.post(`${baseURL}/create-account`, {\n        // Include other registration data as needed\n        ...RegisFormData\n      });\n      console.log('Registration successful:', response.data);\n      alert('Registration successful!');\n      // Handle successful registration\n\n      // Set isRegistering back to false after the registration process is completed\n      setIsRegistering(false);\n    } catch (error) {\n      console.error('Registration failed:', error.response.data);\n      alert('Registration failed!');\n      // Handle registration failure\n    }\n  };\n\n  const logout = () => {\n    setName('');\n    setBirthday('');\n    setFbCount(0);\n    setLoggedIn(false);\n    localStorage.setItem('isLoggedIn', false);\n  };\n\n  //   \n\n  const handleEmailChange = e => {\n    setEmail(e.target.value);\n  };\n  const handlePasswordChange = e => {\n    setPassword(e.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Perform client-side email and password format validation\n    if (!validateEmail(email)) {\n      alert('Please enter a valid email address.');\n      return;\n    }\n    if (!validatePassword(password)) {\n      alert('Incoreect Password');\n      return;\n    }\n    try {\n      const response = await axios.post(`${baseURL}/login`, {\n        email: email,\n        password: password\n      });\n      if (response.data.token) {\n        localStorage.setItem('auth-token', response.data.token);\n        localStorage.setItem('employeeID', response.data.employeeID);\n        localStorage.setItem('premission', response.data.premission);\n        // auto logout\n        const logoutTime = Date.now() + 60 * 60 * 1000; // 60 minutes\n        // const logoutTime = Date.now() + 1 * 5 * 1000; // 5 s for demo\n        localStorage.setItem('logoutTime', logoutTime.toString());\n        alert('Login successfully');\n        navigate('/');\n        window.location.reload();\n      } else {\n        alert('Invalid credentials. Please try again.');\n      }\n    } catch (error) {\n      console.log('Error:', error);\n      if (error.response && error.response.data) {\n        alert(error.response.data.message);\n      } else {\n        alert('Incoreect Email or Password');\n      }\n    }\n  };\n  const validateEmail = email => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n  const validatePassword = password => {\n    const passwordRegex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*]).{8,}$/;\n    return passwordRegex.test(password);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"login-form box\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"control has-icons-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: handleEmailChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"icon is-small is-left\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-envelope\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"control has-icons-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: handlePasswordChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"icon is-small is-left\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-lock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"control\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"button is-success\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FacebookLogin, {\n      cssClass: \"button login-button is-success\",\n      appId: \"6453081621390258\",\n      autoLoad: false,\n      fields: \"name,email,picture\"\n      // scope=\"public_profile,user_gender,user_birthday,user_location,user_friends\"\n      ,\n      callback: responseFacebook\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginForm, \"9ytOlxD4lfDxgocP0VTUeDZZZUo=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","axios","baseURL","useHistory","useNavigate","FacebookLogin","jsxDEV","_jsxDEV","LoginForm","_s","navigate","email","setEmail","password","setPassword","name","setName","birthday","setBirthday","fbCount","setFbCount","loggedIn","setLoggedIn","userInfo","setUserInfo","responseFacebook","response","RegisFormData","get","accessToken","then","res","console","log","alert","localStorage","setItem","setPremission","setDepartment","emId","currentCount","parseInt","slice","newCount","paddedCount","String","padStart","newId","fullName","data","confirmPassword","dateOfBirth","gender","phoneNumber","address","state","premission","department","employeeID","hkID","registerUser","catch","err","error","post","setIsRegistering","logout","handleEmailChange","e","target","value","handlePasswordChange","handleSubmit","preventDefault","validateEmail","validatePassword","token","logoutTime","Date","now","toString","window","location","reload","message","emailRegex","test","passwordRegex","className","onSubmit","children","type","placeholder","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","cssClass","appId","autoLoad","fields","callback","_c","$RefreshReg$"],"sources":["/Users/david/Documents/GitHub/web-api/client/src/component/LoginForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from '../commons/axios';\nimport { baseURL } from '../commons/helper';\nimport { useHistory, useNavigate } from 'react-router-dom';\nimport FacebookLogin from 'react-facebook-login';\n\nconst LoginForm = () => {\n    const navigate = useNavigate();\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    // \n    const [name, setName] = useState('');\n    const [birthday, setBirthday] = useState('');\n    const [fbCount, setFbCount] = useState(0);\n    const [loggedIn, setLoggedIn] = useState(false);\n    const [userInfo, setUserInfo] = useState(null);\n\n    const responseFacebook = async (response) => {\n\n        const RegisFormData = {};\n        axios\n            .get(`https://graph.facebook.com/me?fields=name,email,picture,gender,birthday,location&access_token=${response.accessToken}`)\n            .then((res) => {\n                console.log('res', res)\n                alert({ res })\n                // setName(res.data.name);\n                // setBirthday(res.data.birthday);\n                // setFbCount(res.data.friends.summary.total_count);\n                // setLoggedIn(true);\n                // setUserInfo(res.data);\n\n                // localStorage.setItem('userData', JSON.stringify(res.data));\n                localStorage.setItem('auth-token', true);\n                localStorage.setItem('premission', \"Public User\");\n                // need using facebook data to register the acc ? \n                setPremission(\"Public User\");\n                setDepartment(\"No Department\");\n                let emId = 'A000'\n                // Extract the numerical portion of the application ID\n                const currentCount = parseInt(emId.slice(1)); // Parse the numeric part of the ID\n\n                // Increment the count\n                const newCount = currentCount + 1;\n\n                // Pad the count with leading zeros to maintain the desired format\n                const paddedCount = String(newCount).padStart(4, '0');\n\n                // Generate the new application ID\n                const newId = `A${paddedCount}`;\n\n                RegisFormData = {\n                    fullName: res.data.name,\n                    email: res.data.email,\n                    password: 'No password number',\n                    confirmPassword: 'No password number',\n                    dateOfBirth: res.data.birthday,\n                    gender: res.data.gender,\n                    phoneNumber: 'No phone number',\n                    address: 'No address number',\n                    state: \"verification\",\n                    premission: \"Public User\",\n                    department: \"No Department\",\n                    employeeID: newId,\n                    hkID: 'No phone number',\n                };\n\n\n                // Perform further registration validation and submission\n\n                // call API to create employee\n\n\n                // Simulating an API call delay with setTimeout\n\n                // yes\n\n\n\n\n\n                // navigate('/');\n\n            })\n            .then(async (res) => {\n                // ...\n                await registerUser(RegisFormData);\n                // ...\n            })\n            .catch((err) => {\n                console.error(err);\n            });\n    };\n\n    const registerUser = async (RegisFormData) => {\n        try {\n            const response = await axios.post(`${baseURL}/create-account`, {\n                // Include other registration data as needed\n                ...RegisFormData\n            });\n\n            console.log('Registration successful:', response.data);\n            alert('Registration successful!');\n            // Handle successful registration\n\n            // Set isRegistering back to false after the registration process is completed\n            setIsRegistering(false);\n\n\n        } catch (error) {\n            console.error('Registration failed:', error.response.data);\n            alert('Registration failed!');\n            // Handle registration failure\n        }\n    };\n\n    const logout = () => {\n        setName('');\n        setBirthday('');\n        setFbCount(0);\n        setLoggedIn(false);\n        localStorage.setItem('isLoggedIn', false);\n    };\n\n    //   \n\n    const handleEmailChange = (e) => {\n        setEmail(e.target.value);\n    };\n\n    const handlePasswordChange = (e) => {\n        setPassword(e.target.value);\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        // Perform client-side email and password format validation\n        if (!validateEmail(email)) {\n            alert('Please enter a valid email address.');\n            return;\n        }\n\n        if (!validatePassword(password)) {\n            alert(\n                'Incoreect Password'\n            );\n            return;\n        }\n\n        try {\n            const response = await axios.post(`${baseURL}/login`, {\n                email: email,\n                password: password\n            });\n\n            if (response.data.token) {\n                localStorage.setItem('auth-token', response.data.token);\n                localStorage.setItem('employeeID', response.data.employeeID);\n                localStorage.setItem('premission', response.data.premission);\n                // auto logout\n                const logoutTime = Date.now() + 60 * 60 * 1000; // 60 minutes\n                // const logoutTime = Date.now() + 1 * 5 * 1000; // 5 s for demo\n                localStorage.setItem('logoutTime', logoutTime.toString());\n                alert('Login successfully');\n                navigate('/');\n                window.location.reload();\n            } else {\n                alert('Invalid credentials. Please try again.');\n            }\n        } catch (error) {\n            console.log('Error:', error);\n            if (error.response && error.response.data) {\n                alert(error.response.data.message);\n            } else {\n                alert('Incoreect Email or Password');\n            }\n        }\n    };\n\n    const validateEmail = (email) => {\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        return emailRegex.test(email);\n    };\n\n    const validatePassword = (password) => {\n        const passwordRegex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*]).{8,}$/;\n        return passwordRegex.test(password);\n    };\n\n    return (\n        <form className=\"login-form box\" onSubmit={handleSubmit}>\n            <div className=\"field\">\n                <p className=\"control has-icons-left\">\n                    <input\n                        className=\"input\"\n                        type=\"email\"\n                        placeholder=\"Email\"\n                        value={email}\n                        onChange={handleEmailChange}\n                        required\n                    />\n                    <span className=\"icon is-small is-left\">\n                        <i className=\"fas fa-envelope\"></i>\n                    </span>\n                </p>\n            </div>\n            <div className=\"field\">\n                <p className=\"control has-icons-left\">\n                    <input\n                        className=\"input\"\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        value={password}\n                        onChange={handlePasswordChange}\n                        required\n                    />\n                    <span className=\"icon is-small is-left\">\n                        <i className=\"fas fa-lock\"></i>\n                    </span>\n                </p>\n            </div>\n            <div className=\"field\">\n                <p className=\"control\">\n                    <button type=\"submit\" className=\"button is-success\">\n                        Login\n                    </button>\n                </p>\n            </div>\n            <FacebookLogin\n                cssClass=\"button login-button is-success\"\n                appId=\"6453081621390258\"\n                autoLoad={false}\n                fields=\"name,email,picture\"\n                // scope=\"public_profile,user_gender,user_birthday,user_location,user_friends\"\n                callback={responseFacebook}\n\n            />\n        </form>\n\n    );\n};\n\nexport default LoginForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}