{"ast":null,"code":"var _jsxFileName = \"/Users/david/Documents/GitHub/web-api/client/src/component/LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from '../commons/axios';\nimport { baseURL } from '../commons/helper';\nimport { useHistory, useNavigate } from 'react-router-dom';\nimport FacebookLogin from 'react-facebook-login';\nimport { GApiProvider } from 'react-gapi-auth2';\nimport GoogleLogin from './GoogleLogin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  // \n  const [name, setName] = useState('');\n  const [birthday, setBirthday] = useState('');\n  const [fbCount, setFbCount] = useState(0);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [userInfo, setUserInfo] = useState(null);\n  const responseFacebook = async response => {\n    try {\n      let RegisFormData = {};\n      let res = await axios.get(`https://graph.facebook.com/me?fields=name,email,picture,gender,birthday,location&access_token=${response.accessToken}`);\n      console.log('res', res);\n      let responseCheckUser;\n      try {\n        responseCheckUser = await axios.get(`${baseURL}/get-employees-accounts/${res.data.id}`);\n      } catch (error) {\n        console.log('User not found:', error.message);\n        // Handle the case when the user is not found\n        // Set default values or take alternative actions\n      }\n\n      // Check if the response or response.data is undefined or the user does not exist\n      if (!responseCheckUser || !responseCheckUser.data) {\n        RegisFormData = {\n          fullName: res.data.name,\n          email: res.data.email,\n          password: 'No password number',\n          confirmPassword: 'No password number',\n          dateOfBirth: res.data.birthday,\n          gender: res.data.gender,\n          phoneNumber: 'No phone number',\n          address: 'No address number',\n          state: \"verification\",\n          premission: \"Public User\",\n          department: \"No Department\",\n          employeeID: res.data.id,\n          hkID: 'No phone number'\n        };\n\n        // first time use facebook \n        // give register acc\n        let registrationResponse = await registerUser(RegisFormData);\n\n        // Set the JWT to localStorage\n        localStorage.setItem('auth-token', registrationResponse.data.token);\n        localStorage.setItem('premission', \"Public User\");\n      } else {\n        // have facebook acc already \n        // give login state \n        let UserData = responseCheckUser.data;\n        console.log(\"UserData\", UserData);\n\n        // Since user already exists, the JWT should be in the response\n        // Set the JWT to localStorage\n        localStorage.setItem('auth-token', UserData.token);\n        localStorage.setItem('premission', UserData.employee.premission);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const registerUser = async RegisFormData => {\n    try {\n      const response = await axios.post(`${baseURL}/create-account`, {\n        // Include other registration data as needed\n        ...RegisFormData\n      });\n      console.log('Registration successful:', response.data);\n      alert('Registration successful!');\n      // Handle successful registration\n\n      // Set isRegistering back to false after the registration process is completed\n      // setIsRegistering(false);\n    } catch (error) {\n      console.error('Registration failed:', error.response.data);\n      alert('Registration failed!');\n      // Handle registration failure\n    }\n  };\n\n  const logout = () => {\n    setName('');\n    setBirthday('');\n    setFbCount(0);\n    setLoggedIn(false);\n    localStorage.setItem('isLoggedIn', false);\n  };\n\n  //   \n\n  const handleEmailChange = e => {\n    setEmail(e.target.value);\n  };\n  const handlePasswordChange = e => {\n    setPassword(e.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Perform client-side email and password format validation\n    if (!validateEmail(email)) {\n      alert('Please enter a valid email address.');\n      return;\n    }\n    if (!validatePassword(password)) {\n      alert('Incoreect Password');\n      return;\n    }\n    try {\n      const response = await axios.post(`${baseURL}/login`, {\n        email: email,\n        password: password\n      });\n      if (response.data.token) {\n        localStorage.setItem('auth-token', response.data.token);\n        localStorage.setItem('employeeID', response.data.employeeID);\n        localStorage.setItem('premission', response.data.premission);\n        // auto logout\n        const logoutTime = Date.now() + 60 * 60 * 1000; // 60 minutes\n        // const logoutTime = Date.now() + 1 * 5 * 1000; // 5 s for demo\n        localStorage.setItem('logoutTime', logoutTime.toString());\n        alert('Login successfully');\n        navigate('/');\n        window.location.reload();\n      } else {\n        alert('Invalid credentials. Please try again.');\n      }\n    } catch (error) {\n      console.log('Error:', error);\n      if (error.response && error.response.data) {\n        alert(error.response.data.message);\n      } else {\n        alert('Incoreect Email or Password');\n      }\n    }\n  };\n  const validateEmail = email => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n  const validatePassword = password => {\n    const passwordRegex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*]).{8,}$/;\n    return passwordRegex.test(password);\n  };\n  const clientConfig = {\n    client_id: '<APP>.apps.googleusercontent.com',\n    cookie_policy: 'single_host_origin',\n    scope: 'https://www.googleapis.com/auth/<POLICY>'\n    // etc...\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"login-form box\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"control has-icons-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: handleEmailChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"icon is-small is-left\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-envelope\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"control has-icons-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: handlePasswordChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"icon is-small is-left\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-lock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"control\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"button is-success\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FacebookLogin, {\n      cssClass: \"button login-button is-success\",\n      appId: \"6453081621390258\",\n      autoLoad: false,\n      fields: \"name,email,picture\"\n      // scope=\"public_profile,user_gender,user_birthday,user_location,user_friends\"\n      ,\n      callback: responseFacebook\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginForm, \"9ytOlxD4lfDxgocP0VTUeDZZZUo=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","axios","baseURL","useHistory","useNavigate","FacebookLogin","GApiProvider","GoogleLogin","jsxDEV","_jsxDEV","LoginForm","_s","navigate","email","setEmail","password","setPassword","name","setName","birthday","setBirthday","fbCount","setFbCount","loggedIn","setLoggedIn","userInfo","setUserInfo","responseFacebook","response","RegisFormData","res","get","accessToken","console","log","responseCheckUser","data","id","error","message","fullName","confirmPassword","dateOfBirth","gender","phoneNumber","address","state","premission","department","employeeID","hkID","registrationResponse","registerUser","localStorage","setItem","token","UserData","employee","err","post","alert","logout","handleEmailChange","e","target","value","handlePasswordChange","handleSubmit","preventDefault","validateEmail","validatePassword","logoutTime","Date","now","toString","window","location","reload","emailRegex","test","passwordRegex","clientConfig","client_id","cookie_policy","scope","className","onSubmit","children","type","placeholder","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","cssClass","appId","autoLoad","fields","callback","_c","$RefreshReg$"],"sources":["/Users/david/Documents/GitHub/web-api/client/src/component/LoginForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from '../commons/axios';\nimport { baseURL } from '../commons/helper';\nimport { useHistory, useNavigate } from 'react-router-dom';\nimport FacebookLogin from 'react-facebook-login';\nimport { GApiProvider } from 'react-gapi-auth2';\nimport GoogleLogin from './GoogleLogin';\n\nconst LoginForm = () => {\n    const navigate = useNavigate();\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    // \n    const [name, setName] = useState('');\n    const [birthday, setBirthday] = useState('');\n    const [fbCount, setFbCount] = useState(0);\n    const [loggedIn, setLoggedIn] = useState(false);\n    const [userInfo, setUserInfo] = useState(null);\n\n    const responseFacebook = async (response) => {\n\n        try {\n            let RegisFormData = {};\n            let res = await axios.get(`https://graph.facebook.com/me?fields=name,email,picture,gender,birthday,location&access_token=${response.accessToken}`);\n\n            console.log('res', res)\n\n            let responseCheckUser;\n            try {\n                responseCheckUser = await axios.get(`${baseURL}/get-employees-accounts/${res.data.id}`);\n            } catch (error) {\n                console.log('User not found:', error.message);\n                // Handle the case when the user is not found\n                // Set default values or take alternative actions\n            }\n\n            // Check if the response or response.data is undefined or the user does not exist\n            if (!responseCheckUser || !responseCheckUser.data) {\n                RegisFormData = {\n                    fullName: res.data.name,\n                    email: res.data.email,\n                    password: 'No password number',\n                    confirmPassword: 'No password number',\n                    dateOfBirth: res.data.birthday,\n                    gender: res.data.gender,\n                    phoneNumber: 'No phone number',\n                    address: 'No address number',\n                    state: \"verification\",\n                    premission: \"Public User\",\n                    department: \"No Department\",\n                    employeeID: res.data.id,\n                    hkID: 'No phone number',\n                };\n\n                // first time use facebook \n                // give register acc\n                let registrationResponse = await registerUser(RegisFormData);\n\n                // Set the JWT to localStorage\n                localStorage.setItem('auth-token', registrationResponse.data.token);\n                localStorage.setItem('premission', \"Public User\");\n\n            } else {\n                // have facebook acc already \n                // give login state \n                let UserData = responseCheckUser.data;\n                console.log(\"UserData\", UserData)\n\n                // Since user already exists, the JWT should be in the response\n                // Set the JWT to localStorage\n                localStorage.setItem('auth-token', UserData.token);\n                localStorage.setItem('premission', UserData.employee.premission);\n            }\n        } catch (err) {\n            console.error(err);\n        }\n    };\n\n\n\n    const registerUser = async (RegisFormData) => {\n        try {\n            const response = await axios.post(`${baseURL}/create-account`, {\n                // Include other registration data as needed\n                ...RegisFormData\n            });\n\n            console.log('Registration successful:', response.data);\n            alert('Registration successful!');\n            // Handle successful registration\n\n            // Set isRegistering back to false after the registration process is completed\n            // setIsRegistering(false);\n\n\n        } catch (error) {\n            console.error('Registration failed:', error.response.data);\n            alert('Registration failed!');\n            // Handle registration failure\n        }\n    };\n\n    const logout = () => {\n        setName('');\n        setBirthday('');\n        setFbCount(0);\n        setLoggedIn(false);\n        localStorage.setItem('isLoggedIn', false);\n    };\n\n    //   \n\n    const handleEmailChange = (e) => {\n        setEmail(e.target.value);\n    };\n\n    const handlePasswordChange = (e) => {\n        setPassword(e.target.value);\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        // Perform client-side email and password format validation\n        if (!validateEmail(email)) {\n            alert('Please enter a valid email address.');\n            return;\n        }\n\n        if (!validatePassword(password)) {\n            alert(\n                'Incoreect Password'\n            );\n            return;\n        }\n\n        try {\n            const response = await axios.post(`${baseURL}/login`, {\n                email: email,\n                password: password\n            });\n\n            if (response.data.token) {\n                localStorage.setItem('auth-token', response.data.token);\n                localStorage.setItem('employeeID', response.data.employeeID);\n                localStorage.setItem('premission', response.data.premission);\n                // auto logout\n                const logoutTime = Date.now() + 60 * 60 * 1000; // 60 minutes\n                // const logoutTime = Date.now() + 1 * 5 * 1000; // 5 s for demo\n                localStorage.setItem('logoutTime', logoutTime.toString());\n                alert('Login successfully');\n                navigate('/');\n                window.location.reload();\n            } else {\n                alert('Invalid credentials. Please try again.');\n            }\n        } catch (error) {\n            console.log('Error:', error);\n            if (error.response && error.response.data) {\n                alert(error.response.data.message);\n            } else {\n                alert('Incoreect Email or Password');\n            }\n        }\n    };\n\n    const validateEmail = (email) => {\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        return emailRegex.test(email);\n    };\n\n    const validatePassword = (password) => {\n        const passwordRegex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*]).{8,}$/;\n        return passwordRegex.test(password);\n    };\n\n    const clientConfig = {\n        client_id: '<APP>.apps.googleusercontent.com',\n        cookie_policy: 'single_host_origin',\n        scope: 'https://www.googleapis.com/auth/<POLICY>'\n        // etc...\n    };\n    return (\n        <form className=\"login-form box\" onSubmit={handleSubmit}>\n            <div className=\"field\">\n                <p className=\"control has-icons-left\">\n                    <input\n                        className=\"input\"\n                        type=\"email\"\n                        placeholder=\"Email\"\n                        value={email}\n                        onChange={handleEmailChange}\n                        required\n                    />\n                    <span className=\"icon is-small is-left\">\n                        <i className=\"fas fa-envelope\"></i>\n                    </span>\n                </p>\n            </div>\n            <div className=\"field\">\n                <p className=\"control has-icons-left\">\n                    <input\n                        className=\"input\"\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        value={password}\n                        onChange={handlePasswordChange}\n                        required\n                    />\n                    <span className=\"icon is-small is-left\">\n                        <i className=\"fas fa-lock\"></i>\n                    </span>\n                </p>\n            </div>\n            <div className=\"field\">\n                <p className=\"control\">\n                    <button type=\"submit\" className=\"button is-success\">\n                        Login\n                    </button>\n                </p>\n            </div>\n            <FacebookLogin\n                cssClass=\"button login-button is-success\"\n                appId=\"6453081621390258\"\n                autoLoad={false}\n                fields=\"name,email,picture\"\n                // scope=\"public_profile,user_gender,user_birthday,user_location,user_friends\"\n                callback={responseFacebook}\n\n            />\n            <GoogleLogin></GoogleLogin>\n        </form>\n\n    );\n};\n\nexport default LoginForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,kBAAkB;AACpC,SAASC,OAAO,QAAQ,mBAAmB;AAC3C,SAASC,UAAU,EAAEC,WAAW,QAAQ,kBAAkB;AAC1D,OAAOC,aAAa,MAAM,sBAAsB;AAChD,SAASC,YAAY,QAAQ,kBAAkB;AAC/C,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC5C;EACA,MAAM,CAACiB,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACuB,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACyB,QAAQ,EAAEC,WAAW,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAM2B,gBAAgB,GAAG,MAAOC,QAAQ,IAAK;IAEzC,IAAI;MACA,IAAIC,aAAa,GAAG,CAAC,CAAC;MACtB,IAAIC,GAAG,GAAG,MAAM7B,KAAK,CAAC8B,GAAG,CAAE,iGAAgGH,QAAQ,CAACI,WAAY,EAAC,CAAC;MAElJC,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEJ,GAAG,CAAC;MAEvB,IAAIK,iBAAiB;MACrB,IAAI;QACAA,iBAAiB,GAAG,MAAMlC,KAAK,CAAC8B,GAAG,CAAE,GAAE7B,OAAQ,2BAA0B4B,GAAG,CAACM,IAAI,CAACC,EAAG,EAAC,CAAC;MAC3F,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZL,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEI,KAAK,CAACC,OAAO,CAAC;QAC7C;QACA;MACJ;;MAEA;MACA,IAAI,CAACJ,iBAAiB,IAAI,CAACA,iBAAiB,CAACC,IAAI,EAAE;QAC/CP,aAAa,GAAG;UACZW,QAAQ,EAAEV,GAAG,CAACM,IAAI,CAACnB,IAAI;UACvBJ,KAAK,EAAEiB,GAAG,CAACM,IAAI,CAACvB,KAAK;UACrBE,QAAQ,EAAE,oBAAoB;UAC9B0B,eAAe,EAAE,oBAAoB;UACrCC,WAAW,EAAEZ,GAAG,CAACM,IAAI,CAACjB,QAAQ;UAC9BwB,MAAM,EAAEb,GAAG,CAACM,IAAI,CAACO,MAAM;UACvBC,WAAW,EAAE,iBAAiB;UAC9BC,OAAO,EAAE,mBAAmB;UAC5BC,KAAK,EAAE,cAAc;UACrBC,UAAU,EAAE,aAAa;UACzBC,UAAU,EAAE,eAAe;UAC3BC,UAAU,EAAEnB,GAAG,CAACM,IAAI,CAACC,EAAE;UACvBa,IAAI,EAAE;QACV,CAAC;;QAED;QACA;QACA,IAAIC,oBAAoB,GAAG,MAAMC,YAAY,CAACvB,aAAa,CAAC;;QAE5D;QACAwB,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEH,oBAAoB,CAACf,IAAI,CAACmB,KAAK,CAAC;QACnEF,YAAY,CAACC,OAAO,CAAC,YAAY,EAAE,aAAa,CAAC;MAErD,CAAC,MAAM;QACH;QACA;QACA,IAAIE,QAAQ,GAAGrB,iBAAiB,CAACC,IAAI;QACrCH,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEsB,QAAQ,CAAC;;QAEjC;QACA;QACAH,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEE,QAAQ,CAACD,KAAK,CAAC;QAClDF,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEE,QAAQ,CAACC,QAAQ,CAACV,UAAU,CAAC;MACpE;IACJ,CAAC,CAAC,OAAOW,GAAG,EAAE;MACVzB,OAAO,CAACK,KAAK,CAACoB,GAAG,CAAC;IACtB;EACJ,CAAC;EAID,MAAMN,YAAY,GAAG,MAAOvB,aAAa,IAAK;IAC1C,IAAI;MACA,MAAMD,QAAQ,GAAG,MAAM3B,KAAK,CAAC0D,IAAI,CAAE,GAAEzD,OAAQ,iBAAgB,EAAE;QAC3D;QACA,GAAG2B;MACP,CAAC,CAAC;MAEFI,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEN,QAAQ,CAACQ,IAAI,CAAC;MACtDwB,KAAK,CAAC,0BAA0B,CAAC;MACjC;;MAEA;MACA;IAGJ,CAAC,CAAC,OAAOtB,KAAK,EAAE;MACZL,OAAO,CAACK,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACV,QAAQ,CAACQ,IAAI,CAAC;MAC1DwB,KAAK,CAAC,sBAAsB,CAAC;MAC7B;IACJ;EACJ,CAAC;;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACjB3C,OAAO,CAAC,EAAE,CAAC;IACXE,WAAW,CAAC,EAAE,CAAC;IACfE,UAAU,CAAC,CAAC,CAAC;IACbE,WAAW,CAAC,KAAK,CAAC;IAClB6B,YAAY,CAACC,OAAO,CAAC,YAAY,EAAE,KAAK,CAAC;EAC7C,CAAC;;EAED;;EAEA,MAAMQ,iBAAiB,GAAIC,CAAC,IAAK;IAC7BjD,QAAQ,CAACiD,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC5B,CAAC;EAED,MAAMC,oBAAoB,GAAIH,CAAC,IAAK;IAChC/C,WAAW,CAAC+C,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAME,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAC9BA,CAAC,CAACK,cAAc,CAAC,CAAC;;IAElB;IACA,IAAI,CAACC,aAAa,CAACxD,KAAK,CAAC,EAAE;MACvB+C,KAAK,CAAC,qCAAqC,CAAC;MAC5C;IACJ;IAEA,IAAI,CAACU,gBAAgB,CAACvD,QAAQ,CAAC,EAAE;MAC7B6C,KAAK,CACD,oBACJ,CAAC;MACD;IACJ;IAEA,IAAI;MACA,MAAMhC,QAAQ,GAAG,MAAM3B,KAAK,CAAC0D,IAAI,CAAE,GAAEzD,OAAQ,QAAO,EAAE;QAClDW,KAAK,EAAEA,KAAK;QACZE,QAAQ,EAAEA;MACd,CAAC,CAAC;MAEF,IAAIa,QAAQ,CAACQ,IAAI,CAACmB,KAAK,EAAE;QACrBF,YAAY,CAACC,OAAO,CAAC,YAAY,EAAE1B,QAAQ,CAACQ,IAAI,CAACmB,KAAK,CAAC;QACvDF,YAAY,CAACC,OAAO,CAAC,YAAY,EAAE1B,QAAQ,CAACQ,IAAI,CAACa,UAAU,CAAC;QAC5DI,YAAY,CAACC,OAAO,CAAC,YAAY,EAAE1B,QAAQ,CAACQ,IAAI,CAACW,UAAU,CAAC;QAC5D;QACA,MAAMwB,UAAU,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;QAChD;QACApB,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEiB,UAAU,CAACG,QAAQ,CAAC,CAAC,CAAC;QACzDd,KAAK,CAAC,oBAAoB,CAAC;QAC3BhD,QAAQ,CAAC,GAAG,CAAC;QACb+D,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;MAC5B,CAAC,MAAM;QACHjB,KAAK,CAAC,wCAAwC,CAAC;MACnD;IACJ,CAAC,CAAC,OAAOtB,KAAK,EAAE;MACZL,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEI,KAAK,CAAC;MAC5B,IAAIA,KAAK,CAACV,QAAQ,IAAIU,KAAK,CAACV,QAAQ,CAACQ,IAAI,EAAE;QACvCwB,KAAK,CAACtB,KAAK,CAACV,QAAQ,CAACQ,IAAI,CAACG,OAAO,CAAC;MACtC,CAAC,MAAM;QACHqB,KAAK,CAAC,6BAA6B,CAAC;MACxC;IACJ;EACJ,CAAC;EAED,MAAMS,aAAa,GAAIxD,KAAK,IAAK;IAC7B,MAAMiE,UAAU,GAAG,4BAA4B;IAC/C,OAAOA,UAAU,CAACC,IAAI,CAAClE,KAAK,CAAC;EACjC,CAAC;EAED,MAAMyD,gBAAgB,GAAIvD,QAAQ,IAAK;IACnC,MAAMiE,aAAa,GAAG,uDAAuD;IAC7E,OAAOA,aAAa,CAACD,IAAI,CAAChE,QAAQ,CAAC;EACvC,CAAC;EAED,MAAMkE,YAAY,GAAG;IACjBC,SAAS,EAAE,kCAAkC;IAC7CC,aAAa,EAAE,oBAAoB;IACnCC,KAAK,EAAE;IACP;EACJ,CAAC;;EACD,oBACI3E,OAAA;IAAM4E,SAAS,EAAC,gBAAgB;IAACC,QAAQ,EAAEnB,YAAa;IAAAoB,QAAA,gBACpD9E,OAAA;MAAK4E,SAAS,EAAC,OAAO;MAAAE,QAAA,eAClB9E,OAAA;QAAG4E,SAAS,EAAC,wBAAwB;QAAAE,QAAA,gBACjC9E,OAAA;UACI4E,SAAS,EAAC,OAAO;UACjBG,IAAI,EAAC,OAAO;UACZC,WAAW,EAAC,OAAO;UACnBxB,KAAK,EAAEpD,KAAM;UACb6E,QAAQ,EAAE5B,iBAAkB;UAC5B6B,QAAQ;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC,eACFtF,OAAA;UAAM4E,SAAS,EAAC,uBAAuB;UAAAE,QAAA,eACnC9E,OAAA;YAAG4E,SAAS,EAAC;UAAiB;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNtF,OAAA;MAAK4E,SAAS,EAAC,OAAO;MAAAE,QAAA,eAClB9E,OAAA;QAAG4E,SAAS,EAAC,wBAAwB;QAAAE,QAAA,gBACjC9E,OAAA;UACI4E,SAAS,EAAC,OAAO;UACjBG,IAAI,EAAC,UAAU;UACfC,WAAW,EAAC,UAAU;UACtBxB,KAAK,EAAElD,QAAS;UAChB2E,QAAQ,EAAExB,oBAAqB;UAC/ByB,QAAQ;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC,eACFtF,OAAA;UAAM4E,SAAS,EAAC,uBAAuB;UAAAE,QAAA,eACnC9E,OAAA;YAAG4E,SAAS,EAAC;UAAa;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNtF,OAAA;MAAK4E,SAAS,EAAC,OAAO;MAAAE,QAAA,eAClB9E,OAAA;QAAG4E,SAAS,EAAC,SAAS;QAAAE,QAAA,eAClB9E,OAAA;UAAQ+E,IAAI,EAAC,QAAQ;UAACH,SAAS,EAAC,mBAAmB;UAAAE,QAAA,EAAC;QAEpD;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNtF,OAAA,CAACJ,aAAa;MACV2F,QAAQ,EAAC,gCAAgC;MACzCC,KAAK,EAAC,kBAAkB;MACxBC,QAAQ,EAAE,KAAM;MAChBC,MAAM,EAAC;MACP;MAAA;MACAC,QAAQ,EAAEzE;IAAiB;MAAAiE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE9B,CAAC,eACFtF,OAAA,CAACF,WAAW;MAAAqF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAGf,CAAC;AAACpF,EAAA,CAlOID,SAAS;EAAA,QACMN,WAAW;AAAA;AAAAiG,EAAA,GAD1B3F,SAAS;AAoOf,eAAeA,SAAS;AAAC,IAAA2F,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}