{"ast":null,"code":"var _jsxFileName = \"/Users/david/Documents/GitHub/web-api/client/src/component/MessageList.js\",\n  _s = $RefreshSig$();\n// MessageList.js\nimport axios from '../commons/axios';\nimport React, { useState, useEffect } from 'react';\nimport { baseURL } from '../commons/helper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageList = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const fetchMessages = async () => {\n    const res = await axios.get(`${baseURL}/get-messages`);\n    setMessages(res.data);\n  };\n  useEffect(() => {\n    fetchMessages();\n  }, []);\n  const handleDelete = async id => {\n    await axios.delete(`/delete-messages/${id}`);\n    // Refetch the messages after one is deleted\n    fetchMessages();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(MessageList, \"RyA59LRbn9goj/9N7rELX+NWNVI=\");\n_c = MessageList;\nexport default MessageList;\nvar _c;\n$RefreshReg$(_c, \"MessageList\");","map":{"version":3,"names":["axios","React","useState","useEffect","baseURL","jsxDEV","_jsxDEV","MessageList","_s","messages","setMessages","fetchMessages","res","get","data","handleDelete","id","delete","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/david/Documents/GitHub/web-api/client/src/component/MessageList.js"],"sourcesContent":["// MessageList.js\nimport axios from '../commons/axios';\nimport React, { useState, useEffect } from 'react';\nimport { baseURL } from '../commons/helper';\n\nconst MessageList = () => {\n    const [messages, setMessages] = useState([]);\n\n    const fetchMessages = async () => {\n        const res = await axios.get(`${baseURL}/get-messages`);\n        setMessages(res.data);\n    };\n\n    useEffect(() => {\n        fetchMessages();\n    }, []);\n\n    const handleDelete = async (id) => {\n        await axios.delete(`/delete-messages/${id}`);\n        // Refetch the messages after one is deleted\n        fetchMessages();\n    };\n\n    return (\n        <div>\n            {/* {messages.map(msg => (\n                <div key={msg._id}>\n                    <p>{msg.content}</p>\n                    <button onClick={() => handleDelete(msg._id)}>\n                        Delete\n                    </button>\n                </div>\n            ))} */}\n        </div>\n    );\n};\n\nexport default MessageList;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,kBAAkB;AACpC,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,OAAO,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMS,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAE,GAAET,OAAQ,eAAc,CAAC;IACtDM,WAAW,CAACE,GAAG,CAACE,IAAI,CAAC;EACzB,CAAC;EAEDX,SAAS,CAAC,MAAM;IACZQ,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,YAAY,GAAG,MAAOC,EAAE,IAAK;IAC/B,MAAMhB,KAAK,CAACiB,MAAM,CAAE,oBAAmBD,EAAG,EAAC,CAAC;IAC5C;IACAL,aAAa,CAAC,CAAC;EACnB,CAAC;EAED,oBACIL,OAAA;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OASK,CAAC;AAEd,CAAC;AAACb,EAAA,CA9BID,WAAW;AAAAe,EAAA,GAAXf,WAAW;AAgCjB,eAAeA,WAAW;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}