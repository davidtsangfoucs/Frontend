{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nconst AutoLogout = () => {\n  _s();\n  const navigate = useNavigate();\n  const logoutUser = () => {\n    // Remove the auth token\n    localStorage.removeItem('auth-token');\n    // Optionally, redirect the user to the login page\n    navigate('/login');\n  };\n  useEffect(() => {\n    // Check every second if the current time is past the logout time\n    const intervalId = setInterval(() => {\n      const logoutTime = localStorage.getItem('logoutTime');\n      if (logoutTime && Date.now() > logoutTime) {\n        logoutUser();\n      }\n    }, 1000); // 1000 milliseconds = 1 second\n\n    // Cleanup function to clear the interval when the component unmounts\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n  return null;\n};\n_s(AutoLogout, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = AutoLogout;\nexport default AutoLogout;\nvar _c;\n$RefreshReg$(_c, \"AutoLogout\");","map":{"version":3,"names":["useEffect","useNavigate","AutoLogout","_s","navigate","logoutUser","localStorage","removeItem","intervalId","setInterval","logoutTime","getItem","Date","now","clearInterval","_c","$RefreshReg$"],"sources":["/Users/david/Documents/GitHub/security/client/src/component/AutoLogout.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst AutoLogout = () => {\n    const navigate = useNavigate();\n\n    const logoutUser = () => {\n        // Remove the auth token\n        localStorage.removeItem('auth-token');\n        // Optionally, redirect the user to the login page\n        navigate('/login');\n    };\n\n    useEffect(() => {\n        // Check every second if the current time is past the logout time\n        const intervalId = setInterval(() => {\n            const logoutTime = localStorage.getItem('logoutTime');\n            if (logoutTime && Date.now() > logoutTime) {\n                logoutUser();\n            }\n        }, 1000); // 1000 milliseconds = 1 second\n\n        // Cleanup function to clear the interval when the component unmounts\n        return () => {\n            clearInterval(intervalId);\n        };\n    }, []);\n\n    return null;\n};\n\nexport default AutoLogout;\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAGH,WAAW,CAAC,CAAC;EAE9B,MAAMI,UAAU,GAAGA,CAAA,KAAM;IACrB;IACAC,YAAY,CAACC,UAAU,CAAC,YAAY,CAAC;IACrC;IACAH,QAAQ,CAAC,QAAQ,CAAC;EACtB,CAAC;EAEDJ,SAAS,CAAC,MAAM;IACZ;IACA,MAAMQ,UAAU,GAAGC,WAAW,CAAC,MAAM;MACjC,MAAMC,UAAU,GAAGJ,YAAY,CAACK,OAAO,CAAC,YAAY,CAAC;MACrD,IAAID,UAAU,IAAIE,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGH,UAAU,EAAE;QACvCL,UAAU,CAAC,CAAC;MAChB;IACJ,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEV;IACA,OAAO,MAAM;MACTS,aAAa,CAACN,UAAU,CAAC;IAC7B,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO,IAAI;AACf,CAAC;AAACL,EAAA,CA1BID,UAAU;EAAA,QACKD,WAAW;AAAA;AAAAc,EAAA,GAD1Bb,UAAU;AA4BhB,eAAeA,UAAU;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}